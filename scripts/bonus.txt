2. Дадена е датотека со име “callslog.txt” која содржи логови на повици помеѓу национални и меѓународни повици, секој во посебна линија каде колоната from го претставува бројот кој е повикувач, и колоната to е повиканиот број, со дополнителна информација за времетраењето на повикот во минути (duration) и вкупната цена (price) во денари.
Со користење на концептите на цевки, редирекција и / или командите за филтрирање на текст напишете една UNIX команда која ќе ги **преброи сите различни парови на телефонски броеви во кои и двата броја содржат барем две нули на било која позиција како цифра**
    
    Содржината на callslog.txt
    
    from|to|duration|price
    +10099999999|+1000000000|22|5
    +22222|+100000|16|10
    +1555555555|+144444444|12|9
    +1808880888|+4440444044|42|11
    +1234567|+1555555|31|8
    +1543210987|+1333333333|6|20
    +11111111|+2222222|59|13
    +1222222222|+19999999|39|10
    +122222|+9876543211|16|13
    +1333333333|+1444444444|60|2
    +18901234|+122222222|47|3
    +1000000|+19999999|31|13
    +1789012345|+166666666666|37|15
    +111111111|+1888888|59|18
    +24567|+19999999|12|15
    +9876543211|+111111111111|34|18
    +133333333|+144444444|60|2
    +333333333|+1789012345|17|3
    +19999999999|+1765432109|18|3
    +17007777777|+100|42|9
    +4440444044|+1808880888|42|11
    +1777777777|+1000000000|47|2
    +122222222|+18888888|28|1
    +18888888|+24567|34|19
    +1660660666|+180880808|10|7
    +100|+17007777777|42|9
    
    Излез:
    +10099999999 +1000000000
    +1660660666 +180880808
    +17007777777 +100
    +4440444044 +1808880888
    
    Решение:
    cat callslog.txt | awk -F'|' 'NR > 1 && ($1 ~ /.*[0].*[0]/) && ($2 ~ /.*[0].*[0]/) && !seen[$1 $2]++ && !seen[$2 $1]++ {print $1, $2}' | sort | uniq
    
    cat callslog.txt | awk -F'|' 'NR > 1 && $1 ~ /.*0.*0/ && $2 ~ /.*0.*0/ {
        if ($1 < $2) {
            print $1, $2
        } else {
            print $2, $1
        }
    }' | sort | uniq
 
    
3. Нека постои директориум во кој се содржат повеќе датотеки кои претставуваат податоци за продажбата на една продавница. Секоја датотека (sales report file) има екстензија **.txt** и има ист формат како и останатите такви датотеки. Пример за форматот и изгледот на содржината на **една датотека со продажби** е даден во прилог (пример 1 и 2). Секој ред во датотеката содржи:
    - **product_code** (кодот на продуктот кој е продаден)
    - **quantity** (количина)
    - **amount** (цена на еден продукт)

пример датотека 1:
asd3345k   10   50
akio8983   1    50
akio8983   4    10
akooio00   12   20
werti789   1    60

пример датотека 2:
akio8983   1    10
akio8983   1    10
jkjiiioo   9    23
kiouuii8   1    10


Потребно е да се пресмета вкупната сума која е заработена од продажбата на продуктот чијшто код се дава како прв аргумент на скриптата. Сумата треба да се пресмета имајќи ги предвид сите продажби кои се наоѓаат во сите датотеки за продажби во целниот директориум.

Во продолжение е даден дел од кодот на скрипта која го решава овој проблем. Ваша задача е да ја дополните скриптата.

Скриптата работи така што како аргументи ги зема кодот на продуктот од интерес и името на директориумот кој ги содржи датотеките со продажби.

**Внимавајте:** Опцијата **NOTHING** означува дека на тоа празно место во скриптата не треба да се дополни ништо.

Пример повик на скриптата:


bash [task2.sh] akio8983 sales

Решение:
#!/bin/bash
if [ $# -ne 2 ]
then
    echo "Usage: task2.sh <product_name> <directory>"
    exit 1
fi

product=$1
directory=$2

IFS=$'\n'
total_sales=0

for file in "$directory"/*.txt
do
    for line in `cat "$file"`
    do
        product_code=`echo "$line" | awk -F" " '{print $1;}'`
        quantity=`echo "$line" | awk -F" " '{print $2;}'`
        amount=`echo "$line" | awk -F" " '{print $3;}'`

        if [ "$product_code" = "$product" ]
        then
            // точен одговор, но старомодно
            product_sales=`expr $quantity * $amount`
            total_sales=`expr $total_sales + $product_sales`
	    ------
	    // ова е поново, и е ставено чисто за пракса
	    product_sales=$(($quantity * $amount))
	    total_sales=$(($total_sales + $product_sales))
        fi
    done
done

echo "Total sales amount for $product: $total_sales"